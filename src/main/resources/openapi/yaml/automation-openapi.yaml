openapi: 3.0.3
info:
  title: Library API - OpenAPI 3.0
  description: |-
    This is a sample Library Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the Library, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
    
    Some useful links:
    - [The library repository](https://github.com/anicetkeric/spring-reactive-openapi-codegen)
    - [The source API definition for the library](https://github.com/anicetkeric/spring-reactive-openapi-codegen/blob/main/src/main/resources/openapi/yaml/library-openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: boottechnologies.ci@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0.11'
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: http://localhost:8081/api/v1
    description: Staging server
  - url: http://localhost:8082/api/v1
    description: Production server
tags:
  - name: User
    description: Operations about user
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /user:
    get:
      tags:
        - User
      summary: Get all list user
      operationId: "getAllUser"
      responses:
        '200':
          description: return successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '401':
          description: You are not authorized to view the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '403':
          description: Accessing the resource you were trying to reach is forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '404':
          description: The resource you were trying to reach is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '500':
          description: 'something went wrong! '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
    post:
      tags:
        - User
      summary: Create a new user.
      description: Create new user in service
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseDTO'
        '400':
          description: 'something went wrong! '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '401':
          description: You are not authorized to view the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '403':
          description: Accessing the resource you were trying to reach is forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '404':
          description: The resource you were trying to reach is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
  /user/{id}:
    get:
      tags:
        - User
      summary: get the "id" user.
      description: Returns a single record
      operationId: getOneUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "405":
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: entity by id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
    put:
      tags:
        - User
      summary: Updates an existing user.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseDTO'
    delete:
      tags:
        - User
      summary: Delete an existing user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            description: user id
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponseDTO'
#  /user/age:
#    get:
#      tags:
#        - User
#      parameters:
#        - in: query
#          name: minAge
#          schema:
#            type: integer
#          description: minimum age of user to filter
#        - in: query
#          name: maxAge
#          schema:
#            type: integer
#          description: maximum age of user to filter
#      summary: Get list of User with age within range
#      operationId: "getAllUserWithinAgeRange"
#      responses:
#        '200':
#          description: return successfully
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/UserResponseDTO'
#        '400':
#          description: Bad Request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponseDTO'
#        '401':
#          description: You are not authorized to view the resource
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponseDTO'
#        '403':
#          description: Accessing the resource you were trying to reach is forbidden
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponseDTO'
#        '404':
#          description: The resource you were trying to reach is not found
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponseDTO'
#        '405':
#          description: Method Not Allowed
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponseDTO'
#        '500':
#          description: 'something went wrong! '
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ErrorResponseDTO'

components:
  schemas:
    PetDTO:
      type: object
      required:
        - pet_type
      properties:
        pet_type:
          type: string
      discriminator:
        propertyName: pet_type
    DogDTO:
      allOf:
        - $ref: "#/components/schemas/PetDTO"
      properties:
        name:
          type: string
    CatDTO:
      allOf:
        - $ref: "#/components/schemas/PetDTO"
      properties:
        breed:
          type: string
    UserRequestDTO:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        name:
          type: string
    UserResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    ErrorResponseDTO:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/ErrorCodesDTO"
        message:
          type: string
        description:
          type: string
        errors:
          type: object
    SuccessResponseDTO:
      type: object
      properties:
        message:
          type: string
    ErrorCodesDTO:
      type: string
      enum:
        - BAD_REQUEST
        - INVALID_CREDENTIALS
        - LOGIN_ALREADY_TAKEN